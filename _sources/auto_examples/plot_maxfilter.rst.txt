

.. _sphx_glr_auto_examples_plot_maxfilter.py:


Maxwell filtering
=================

Demonstrates maxwell filtering for one run (sub003, run01) using MNE-python.



.. code-block:: python


    import os.path as op

    import mne
    from mne import Epochs
    from mne.preprocessing import maxwell_filter

    from library.config import study_path, cal, ctc, set_matplotlib_defaults

    event_ids = [5, 6, 7]  # Famous faces

    subject = "sub001"
    bads = ['MEG1031', 'MEG1111', 'MEG2113']
    filter_params = dict(fir_window='hann', l_trans_bandwidth=0.5, phase='zero',
                         h_trans_bandwidth='auto', filter_length='auto',
                         fir_design='firwin')

    raw_fname_in = op.join(study_path, 'ds117', subject, 'MEG', 'run_01_raw.fif')
    sss_fname_in = op.join(study_path, 'ds117', subject, 'MEG', 'run_01_sss.fif')







First the filtered raw data.



.. code-block:: python

    raw = mne.io.read_raw_fif(raw_fname_in, preload=True)

    raw.info['bads'] = bads
    picks = mne.pick_types(raw.info, meg=True, exclude='bads')
    raw.filter(1., 40, **filter_params)

    events = mne.find_events(raw, stim_channel='STI101', consecutive='increasing',
                             mask=4352, mask_type='not_and', min_duration=0.003,
                             verbose=True)
    evoked_before = Epochs(raw, events, event_id=event_ids, picks=picks).average()





.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/ds117/sub001/MEG/run_01_raw.fif...
        Read a total of 8 projection items:
            mag_ssp_upright.fif : PCA-mags-v1 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v2 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v3 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v4 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v5 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v1 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v2 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v3 (1 x 306)  idle
        Range : 268400 ... 815099 =    244.000 ...   740.999 secs
    Ready.
    Current compensation grade : 0
    Reading 0 ... 546699  =      0.000 ...   496.999 secs...
    Setting up band-pass filter from 1 - 40 Hz
    h_trans_bandwidth chosen to be 10.0 Hz
    Filter length of 6820 samples (6.200 sec) selected
    148 events found
    Events id: [ 5  6  7 13 14 15 17 18 19]
    50 matching events found
    Created an SSP operator (subspace dimension = 8)
    8 projection items activated


Then Maxfiltered and SSS'd data.



.. code-block:: python

    raw = mne.io.read_raw_fif(raw_fname_in, preload=True)
    raw_sss = mne.io.read_raw_fif(sss_fname_in, preload=True)
    raw.info['bads'] = bads
    raw_sss.info['bads'] = bads

    raw = maxwell_filter(raw, calibration=cal, cross_talk=ctc, st_duration=None)

    raw.filter(1., 40, **filter_params)
    raw_sss.filter(1., 40, **filter_params)

    evoked_after = Epochs(raw, events, event_id=event_ids, picks=picks).average()
    evoked_sss = Epochs(raw_sss, events, event_id=event_ids, picks=picks).average()





.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/ds117/sub001/MEG/run_01_raw.fif...
        Read a total of 8 projection items:
            mag_ssp_upright.fif : PCA-mags-v1 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v2 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v3 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v4 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v5 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v1 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v2 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v3 (1 x 306)  idle
        Range : 268400 ... 815099 =    244.000 ...   740.999 secs
    Ready.
    Current compensation grade : 0
    Reading 0 ... 546699  =      0.000 ...   496.999 secs...
    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/ds117/sub001/MEG/run_01_sss.fif...
    This filename (/tsi/doctorants/data_gramfort/dgw_faces/ds117/sub001/MEG/run_01_sss.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, raw.fif.gz, raw_sss.fif.gz or raw_tsss.fif.gz
        Range : 268400 ... 815099 =    244.000 ...   740.999 secs
    Ready.
    Current compensation grade : 0
    Reading 0 ... 546699  =      0.000 ...   496.999 secs...
    Maxwell filtering raw data
        Using loaded raw data
    100 T1/T2 magnetometer channel types found. If using SSS, it is advised to replace coil types using "fix_mag_coil_types".
        Bad MEG channels being reconstructed: ['MEG1031', 'MEG1111', 'MEG2113']
        Processing 204 gradiometers and 102 magnetometers
        Using fine calibration sss_cal.dat
            Adjusting non-orthogonal EX and EY
            Adjusted coil positions by (μ ± σ): 0.3° ± 0.3° (max: 1.3°)
    (X, Y) fit (1.5, 27.5) more than 20 mm from head frame origin
        Automatic origin fit: head of radius 83.1 mm
        Using origin 1.5, 27.5, 26.0 mm in the head frame
        Computing regularization
            Using 80/95 harmonic components for    0.000  (65/80 in, 15/15 out)
        Processing 49 data chunks of (at least) 10.0 sec
    [done]
    Setting up band-pass filter from 1 - 40 Hz
    h_trans_bandwidth chosen to be 10.0 Hz
    Filter length of 6820 samples (6.200 sec) selected
    Setting up band-pass filter from 1 - 40 Hz
    h_trans_bandwidth chosen to be 10.0 Hz
    Filter length of 6820 samples (6.200 sec) selected
    50 matching events found
    0 projection items activated
    50 matching events found
    0 projection items activated


Plotting



.. code-block:: python

    import matplotlib.pyplot as plt  # noqa
    set_matplotlib_defaults(plt)

    ylim = dict(mag=(-400, 400))

    fig, axes = plt.subplots(1, 3, figsize=(18, 6))
    plt.tight_layout()
    evoked_before.pick_types(meg='mag').plot(axes=axes[0], spatial_colors=True,
                                             ylim=ylim,
                                             titles={'mag': 'Before SSS'})
    axes[0].set_title('A')
    evoked_after.pick_types(meg='mag').plot(axes=axes[1], spatial_colors=True,
                                            ylim=ylim, titles={'mag': 'After SSS'})
    axes[1].set_title('B')
    evoked_sss.pick_types(meg='mag').plot(axes=axes[2], spatial_colors=True,
                                          ylim=ylim,
                                          titles={'mag': 'After Maxfilter (TM)'})
    axes[2].set_title('C')
    fig.savefig('Maxfilter.pdf', bbox_to_inches='tight')



.. image:: /auto_examples/images/sphx_glr_plot_maxfilter_001.png
    :align: center




**Total running time of the script:** ( 1 minutes  15.903 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_maxfilter.py <plot_maxfilter.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_maxfilter.ipynb <plot_maxfilter.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
