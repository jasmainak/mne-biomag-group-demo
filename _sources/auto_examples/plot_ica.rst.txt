

.. _sphx_glr_auto_examples_plot_ica.py:


====================
Remove ECG using ICA
====================

Remove ECG for sub005 using ICA.



.. code-block:: python

    import os
    import os.path as op

    import mne
    from mne.preprocessing import create_ecg_epochs, read_ica

    from library.config import meg_dir, map_subjects

    subject_id, run = 5, 1
    subject = "sub%03d" % subject_id
    print("processing subject: %s" % subject)

    data_path = op.join(meg_dir, subject)





.. rst-class:: sphx-glr-script-out

 Out::

    processing subject: sub005


Now we get the bad channels.



.. code-block:: python


    mapping = map_subjects[subject_id]  # map to correct subject
    all_bads = list()

    bads = list()
    bad_name = op.join('bads', mapping, 'run_%02d_raw_tr.fif_bad' % run)
    if os.path.exists(bad_name):
        with open(bad_name) as f:
            for line in f:
                bads.append(line.strip())







We read the data.



.. code-block:: python


    run_fname = op.join(data_path, 'run_%02d_filt_sss_raw.fif' % run)
    raw = mne.io.read_raw_fif(run_fname, preload=True)





.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/MEG/sub005/run_01_filt_sss_raw.fif...
        Range : 154000 ... 699599 =    140.000 ...   635.999 secs
    Ready.
    Current compensation grade : 0
    Reading 0 ... 545599  =      0.000 ...   495.999 secs...


We change the channel type for ECG and EOG.



.. code-block:: python


    raw.set_channel_types({'EEG061': 'eog', 'EEG062': 'eog', 'EEG063': 'ecg',
                           'EEG064': 'misc'})  # EEG064 free floating el.
    raw.rename_channels({'EEG061': 'EOG061', 'EEG062': 'EOG062',
                         'EEG063': 'ECG063'})







Bad sensors are repaired.



.. code-block:: python


    raw.info['bads'] = bads
    raw.interpolate_bads()
    raw.set_eeg_reference()





.. rst-class:: sphx-glr-script-out

 Out::

    Computing interpolation matrix from 70 sensor positions
    Interpolating 0 sensors
    Adding average EEG reference projection.
    1 projection items deactivated
    Average reference projection was added, but hasn't been applied yet. Use the .apply_proj() method function to apply projections.


Now let's get to some serious ICA preprocessing



.. code-block:: python


    ica_name = op.join(meg_dir, subject, 'run_%02d-ica.fif' % run)
    ica = read_ica(ica_name)
    n_max_ecg = 3  # use max 3 components
    ecg_epochs = create_ecg_epochs(raw, tmin=-.5, tmax=.5)
    ecg_inds, scores_ecg = ica.find_bads_ecg(ecg_epochs, method='ctps',
                                             threshold=0.8)
    ica.plot_sources(raw, exclude=ecg_inds)
    ica.plot_scores(scores_ecg, exclude=ecg_inds)
    ica.plot_properties(raw, ecg_inds)
    ica.exclude += ecg_inds[:n_max_ecg]



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_ica_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_ica_002.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_ica_003.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Reading /tsi/doctorants/data_gramfort/dgw_faces/MEG/sub005/run_01-ica.fif ...
    Now restoring ICA solution ...
    Ready.
    Using channel ECG063 to identify heart beats.
    Setting up band-pass filter from 8 - 16 Hz
    Number of ECG events detected : 593 (average pulse 71 / min.)
    593 matching events found
    Created an SSP operator (subspace dimension = 1)
    Loading data for 593 events and 1101 original time points ...
    2 bad epochs dropped


**Total running time of the script:** ( 0 minutes  52.514 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_ica.py <plot_ica.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_ica.ipynb <plot_ica.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
